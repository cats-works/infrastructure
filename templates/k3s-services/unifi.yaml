---
apiVersion: v1
kind: Namespace
metadata:
  name: unifi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
  name: pv-nfs-unifi
spec:
  capacity:
    storage: 15Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-csi
  csi:
    driver: nfs.csi.k8s.io
    volumeHandle: nas-lgb/nas/k3s_prod_pvs/unifi
    volumeAttributes:
      server: nas-lgb
      share: /nas/k3s_prod_pvs
      subDir: unifi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-unifi
  namespace: unifi
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  volumeName: pv-nfs-unifi
  storageClassName: nfs-csi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unifi-configmap
  namespace: unifi
data:
  TZ: "America/Los_Angeles"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi-controller
  namespace: unifi
  labels:
    app: unifi
spec:
  selector:
    matchLabels:
      app: unifi
  template:
    metadata:
      labels:
        app: unifi
    spec:
      containers:
      - name: unifi
        image: docker.io/jacobalberty/unifi:v9.4.19
        envFrom:
        - configMapRef:
            name: unifi-configmap
        ports:
        - name: svc-3478-stun
          containerPort: 3478
          protocol: UDP
        - name: svc-8080-tcp
          containerPort: 8080
          protocol: TCP
        - name: svc-8443-acp
          containerPort: 8443
          protocol: TCP
        - name: svc-8843-portal
          containerPort: 8843
          protocol: TCP
        - name: svc-8880-portal
          containerPort: 8880
          protocol: TCP
        volumeMounts:
        - mountPath: /unifi
          name: unifi
      volumes:
        - name: unifi
          persistentVolumeClaim:
            claimName: pvc-unifi
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-lb
  namespace: unifi
spec:
  selector:
    app: unifi
  ports:
    - name: 3478-udp
      port: 3478
      targetPort: 3478
      protocol: UDP
    - name: 8443-tcp
      port: 8443
      targetPort: 8443
      protocol: TCP
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
      protocol: TCP
  externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: "{{ unifi_lb_ip }}"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unifi-admin
  namespace: unifi
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - unifi.kittytel.net
    secretName: unifi-key
  rules:
  - host: unifi.kittytel.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unifi-lb
            port:
              number: 8443

