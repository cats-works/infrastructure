---
apiVersion: v1
kind: Namespace
metadata:
  name: dnsfilter
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-pihole
  namespace: dnsfilter
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-path-retained
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-configmap
  namespace: dnsfilter
data:
  TZ: "America/Los_Angeles"
  ADMIN_EMAIL: "<sysadmin@kittytel.net>"
  DNS1: "10.43.0.20"
  DNS2: "10.43.0.20"
---
apiVersion: v1
kind: Secret
metadata:
  name: pihole-secret
  namespace: dnsfilter
data:
  FTLCONF_webserver_api_password: "{{ pihole_api_password }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: dnsfilter
  labels:
    app: pihole
spec:
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - name: pihole
        image: docker.io/pihole/pihole:2025.08.0
        envFrom:
        - configMapRef:
            name: pihole-configmap 
        - secretRef:
            name: pihole-secret
        ports:
        - name: svc-53-udp
          containerPort: 53
          protocol: UDP
        - name: svc-53-tcp
          containerPort: 53
          protocol: TCP
        - name: svc-ui
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/pihole
          name: pihole-etc
      volumes:
        - name: pihole-etc
          persistentVolumeClaim:
            claimName: pvc-pihole
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-lb
  namespace: dnsfilter
spec:
  selector:
    app: pihole
  ports:
    - name: 53-udp
      port: 53
      targetPort: 53
      protocol: UDP
    - name: 53-tcp
      port: 53
      targetPort: 53
      protocol: TCP
  externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: " {{ dnsfilter_lb_ip }}"
---
kind: Service 
apiVersion: v1 
metadata:
  name: pihole-admin 
  namespace: dnsfilter
spec:
  selector:
    app: pihole
  type: ClusterIP
  ports:
    - name: 80-tcp
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unbound-config
  namespace: dnsfilter
data:
  unbound.conf: |
    server:
      server:
      do-not-query-localhost: no
      interface: 0.0.0.0
      interface: ::0
      port: 53
      tls-cert-bundle: /etc/ssl/certs/ca-certificates.crt
      access-control: 10.42.0.0/24 allow
      access-control: 10.43.0.0/24 allow
      access-control: 10.4.20.0/24 allow

    forward-zone:
      name: "."
      forward-tls-upstream: yes
      forward-addr: 9.9.9.11@853#dns.quad9.net
      forward-addr: 149.112.112.11@853#dns.quad9.net
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unbound
  namespace: dnsfilter
  labels:
    app: unbound
spec:
  replicas: 1
  selector:
    matchLabels:
      app: unbound
  template:
    metadata:
      labels:
        app: unbound
    spec:
      containers:
      - name: unbound
        image: klutchell/unbound:1.24.0
        ports:
        - name: svc-53-udp
          containerPort: 53
          protocol: UDP
        volumeMounts:
        - mountPath: /etc/unbound/unbound.conf.d/dns-tls-upstream.conf
          subPath: dns-tls-upstream.conf
          name: unbound-config
      volumes:
        - name: unbound-config
          configMap:
            name: unbound-config
---
kind: Service 
apiVersion: v1 
metadata:
  name: unbound-svc 
  namespace: dnsfilter
spec:
  selector:
    app: unbound
  type: ClusterIP
  clusterIP: 10.43.0.20
  ports:
    - name: 53-udp
      port: 53
      targetPort: 53
      protocol: UDP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-admin
  namespace: dnsfilter
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - dnsfilter.kittytel.net
    secretName: dnsfilter-ingress-ssl-key
  rules:
  - host: dnsfilter.kittytel.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pihole-admin
            port:
              number: 80
