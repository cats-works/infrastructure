---
apiVersion: v1
kind: Namespace
metadata:
  name: mediahost
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-jellyfin-config
  namespace: mediahost
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path-retained
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-jellyfin-cache
  namespace: mediahost
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  storageClassName: local-path-retained
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
  name: pv-nfs-media
spec:
  capacity:
    storage: 1000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-csi
  csi:
    driver: nfs.csi.k8s.io
    volumeHandle: nas-lgb/nas/media
    volumeAttributes:
      server: nas-lgb
      share: /nas/media
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-nfs-pvc
  namespace: mediahost
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  volumeName: pv-nfs-media
  storageClassName: nfs-csi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jellyfin-configmap
  namespace: mediahost
data:
  TZ: "America/Los_Angeles"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: mediahost
  labels:
    app: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: docker.io/jellyfin/jellyfin:2025090805
        envFrom:
        - configMapRef:
            name: jellyfin-configmap
        ports:
        - name: svc-8080-tcp
          containerPort: 8080
          protocol: TCP
        - name: svc-8443-acp
          containerPort: 8443
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: jellyfin-config
        - mountPath: /cache
          name: jellyfin-cache
        - mountPath: /media
          name: jellyfin-media
      volumes:
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: pvc-jellyfin-config
        - name: jellyfin-cache
          persistentVolumeClaim:
            claimName: pvc-jellyfin-cache
        - name: jellyfin-media
          persistentVolumeClaim:
            claimName: media-nfs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-clusterip
  namespace: mediahost
spec:
  selector:
    app: jellyfin
  ports:
    - name: 8096-tcp
      port: 8096
      targetPort: 8096
      protocol: TCP
    - name: 8920-tcp
      port: 8920
      targetPort: 8920
      protocol: TCP
    - name: 7359-udp
      port: 7359
      targetPort: 7359
      protocol: UDP
    - name: 1900-udp
      port: 1900
      targetPort: 1900
      protocol: UDP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: mediahost
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - media.kittytel.net
    secretName: mediahost-key
  rules:
  - host: media.kittytel.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin-clusterip
            port:
              number: 8096

