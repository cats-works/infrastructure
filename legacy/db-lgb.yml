---
- name: Provision MariaDB Database Server
  hosts: db-lgb.ad.kittytel.net
  remote_user: "{{ vault_ansible_deployment_user }}"
  become: yes
  become_method: sudo
  # The following pre-task ansible check is
  # borrowed from Rocky Linux ansible playbooks
  pre_tasks:
    - name: Check if ansible cannot be run here
      stat:
        path: /etc/no-ansible
      register: no_ansible

    - name: Verify if we can run ansible
      assert:
        that:
          - "not no_ansible.stat.exists"
        success_msg: "We are able to run on this node"
        fail_msg: "/etc/no-ansible exists - skipping run on this node"

    - name: Deploy failsafe user account
      import_tasks: tasks/provisioning/failsafe.yml
    - name: Deploy kitty telecom root CA
      import_tasks: tasks/provisioning/root-ca.yml
    - name: Update all apt packages to their latest version
      apt:
        name: "*"
        state: latest
      when: ansible_os_family == "Debian"
    - name: Set Hostname
      hostname: 
        name: "{{ inventory_hostname }}"

  roles:
    - monitoring-internal
    - shell-niceties
    - ad-member

  tasks:
    - name: Install mariadb-server
      package: 
        name: 
          - mariadb-server
          - mariadb-client
          - python3-pymysql

    - name: Install my.cnf
      template:
        src:  templates/provisioning/my.cnf.j2
        dest:  /etc/mysql/my.cnf
        mode: '0644'
        owner: root
        group: root

    # Thanks to http://youdidwhatwithtsql.com/simple-mariadb-deployment-ansible/2311/
    - name: See if /var/lib/mysql is empty
      find:
        path=/var/lib/mysql
        patterns='\*'
      register: db_files

    - name: Run mysql_install_db only if /var/lib/mysql is empty
      command: mysql_install_db --datadir=/var/lib/mysql
      when: db_files.matched|int == 0

    - name: Is root password set?
      command: mysql -u root --execute "SELECT NOW()"
      register: is_root_password_set
      ignore_errors: yes

    - name: Delete anonymous users
      mysql_user:
        user:
        state: absent
        login_unix_socket: /run/mysqld/mysqld.sock
      when: is_root_password_set.rc == 0

    - name: Set root password
      mysql_user:
        user: root
        password: "{{ vault_mariadb_root_pw }}"
        login_unix_socket: /run/mysqld/mysqld.sock
      when: is_root_password_set.rc == 0

    - name: Create mysql ansible user
      mysql_user:
        name: "{{ vault_mariadb_ansible_user }}"
        password: "{{ vault_mariadb_ansible_pw }}"
        priv: "*.*:ALL,GRANT"
        login_user: root
        login_password: "{{vault_mariadb_root_pw}}"
        state: present
      when: is_root_password_set.rc == 0

  post_tasks:
    - name: Install cat's SSH keys
      import_tasks: tasks/provisioning/cat-ssh.yml  
    - name: Ensure mariadb is enabled and started
      service:
        name: mariadb 
        state: restarted
        enabled: yes
    - name: Touching run file that ansible has ran here
      file:
        path: /var/log/ansible.run
        state: touch
        mode: '0644'
        owner: root
        group: root
