---
# Playbook for Debian GNU/Linux
# ALL TASKS in this playbook MUST conclude with the
#   when: pxe_distro == "debian"

- name: "Check if we have existing ISO"
  stat:
    path: "/srv/linux/debian-{{ debian_version }}-{{ desired_arch }}-netinst.iso"
  register: iso_exists
  vars:
    desired_arch: amd64

- name: "Get the Debian {{ debian_codename }} ISO"
  block:
    - name: "Retrieve Debian GNU/Linux {{ debian_codename }} {{ desired_arch }} ISO (from current)"
      get_url: 
        url: '{{ debian_iso_url }}'
        dest: /srv/linux/debian-{{ debian_version }}-{{ desired_arch }}-netinst.iso
      vars:
        desired_arch: amd64
  rescue:
    - name: "Retrieve Debian GNU/Linux {{ debian_codename }} {{ desired_arch }} ISO (from archive)"
      get_url: 
        url: '{{ debian_archive_iso_url }}'
        dest: /srv/linux/debian-{{ debian_version }}-{{ desired_arch }}-netinst.iso
      vars:
        desired_arch: amd64
  when: "not iso_exists.stat.exists"

- name: Mount Debian GNU/Linux {{ debian_version }} ISO
  mount:
    path: /srv/distro/debian-{{ debian_version }}/
    src: /srv/linux/debian-{{ debian_version }}-netinst.iso
    fstype: iso9660
    opts: ro,loop
    state: present
  vars:
    desired_arch: amd64

- name: "Delete old debian-netinst-{{ debian_codename }} folder"
  file:
    state: absent
    path: "/srv/distro/debian-netinst-{{ debian_codename }}-{{desired_arch}}/"
  vars:
    desired_arch: amd64

- name: "Create folder for debian-netinst-{{ debian_codename }}"
  file:
    path: "/srv/distro/debian-netinst-{{ debian_codename }}-{{desired_arch}}/"
    state: directory
    mode: '0755'
    owner: root
    group: root
  vars:
    desired_arch: amd64

- name: Unarchive debian netinst tarball
  unarchive:
    src: "{{ debian_netinst_url }}"
    dest: "/srv/distro/debian-netinst-{{ debian_codename }}-{{desired_arch}}/"
    remote_src: yes
  vars:
    desired_arch: amd64
